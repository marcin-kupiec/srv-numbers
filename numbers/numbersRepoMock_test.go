// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package numbers

import (
	"context"
	"sync"
)

// Ensure, that numbersRepoMock does implement numbersRepo.
// If this is not the case, regenerate this file with moq.
var _ numbersRepo = &numbersRepoMock{}

// numbersRepoMock is a mock implementation of numbersRepo.
//
//	func TestSomethingThatUsesnumbersRepo(t *testing.T) {
//
//		// make and configure a mocked numbersRepo
//		mockednumbersRepo := &numbersRepoMock{
//			GetAllFunc: func(ctx context.Context) ([]int64, error) {
//				panic("mock out the GetAll method")
//			},
//		}
//
//		// use mockednumbersRepo in code that requires numbersRepo
//		// and then make assertions.
//
//	}
type numbersRepoMock struct {
	// GetAllFunc mocks the GetAll method.
	GetAllFunc func(ctx context.Context) ([]int64, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetAll holds details about calls to the GetAll method.
		GetAll []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
		}
	}
	lockGetAll sync.RWMutex
}

// GetAll calls GetAllFunc.
func (mock *numbersRepoMock) GetAll(ctx context.Context) ([]int64, error) {
	if mock.GetAllFunc == nil {
		panic("numbersRepoMock.GetAllFunc: method is nil but numbersRepo.GetAll was just called")
	}
	callInfo := struct {
		Ctx context.Context
	}{
		Ctx: ctx,
	}
	mock.lockGetAll.Lock()
	mock.calls.GetAll = append(mock.calls.GetAll, callInfo)
	mock.lockGetAll.Unlock()
	return mock.GetAllFunc(ctx)
}

// GetAllCalls gets all the calls that were made to GetAll.
// Check the length with:
//
//	len(mockednumbersRepo.GetAllCalls())
func (mock *numbersRepoMock) GetAllCalls() []struct {
	Ctx context.Context
} {
	var calls []struct {
		Ctx context.Context
	}
	mock.lockGetAll.RLock()
	calls = mock.calls.GetAll
	mock.lockGetAll.RUnlock()
	return calls
}
